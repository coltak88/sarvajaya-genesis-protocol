# Prometheus Configuration for Sarvajaya Genesis Protocol AI System
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'sarvajaya-ai-monitor'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v1

# Load rules once and periodically evaluate them
rule_files:
  - 'alert_rules.yml'

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # FastAPI AI Application
  - job_name: 'sarvajaya-ai-backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /metrics
    params:
      format: ['prometheus']
    scrape_timeout: 10s

  # Celery workers
  - job_name: 'celery-workers'
    static_configs:
      - targets: ['celery:8001']
    scrape_interval: 30s
    metrics_path: /metrics

  # Celery Flower monitoring
  - job_name: 'celery-flower'
    static_configs:
      - targets: ['flower:5555']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis for caching and task queue
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: /metrics

  # PostgreSQL database
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    metrics_path: /metrics

  # Weaviate vector database
  - job_name: 'weaviate'
    static_configs:
      - targets: ['weaviate:8080']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s

  # MLflow tracking server
  - job_name: 'mlflow'
    static_configs:
      - targets: ['mlflow:5000']
    scrape_interval: 60s
    metrics_path: /metrics

  # Jupyter Lab monitoring
  - job_name: 'jupyter-lab'
    static_configs:
      - targets: ['jupyter:8888']
    scrape_interval: 60s
    metrics_path: /metrics

  # Grafana monitoring
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 60s
    metrics_path: /metrics

  # Custom AI-specific metrics
  - job_name: 'ai-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 15s
    metrics_path: /ai-metrics
    params:
      format: ['prometheus']

  # Model performance metrics
  - job_name: 'model-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 30s
    metrics_path: /model-metrics
    params:
      format: ['prometheus']

  # Vector search metrics
  - job_name: 'vector-search-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 30s
    metrics_path: /vector-metrics
    params:
      format: ['prometheus']

  # Content generation metrics
  - job_name: 'content-generation-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 30s
    metrics_path: /content-metrics
    params:
      format: ['prometheus']

  # Knowledge base metrics
  - job_name: 'knowledge-base-metrics'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 60s
    metrics_path: /knowledge-metrics
    params:
      format: ['prometheus']

  # API gateway metrics
  - job_name: 'api-gateway-metrics'
    static_configs:
      - targets: ['nginx:80']
    scrape_interval: 15s
    metrics_path: /metrics

  # Container metrics (if using cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics

# Remote write configuration for long-term storage
remote_write:
  - url: 'https://prometheus-remote-write-endpoint.example.com/api/v1/write'
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'ai_.*'
        action: keep

# Remote read configuration
remote_read:
  - url: 'https://prometheus-remote-read-endpoint.example.com/api/v1/read'
    read_recent: true